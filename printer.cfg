[include shell_command.cfg]
#[include fluidd.cfg]
[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

# This file contains common pin mappings for the BIGTREETECH SKR
# MINI 2.0. To use this config, the firmware should be compiled for 
# the STM32F103 with a "28KiB bootloader". Also select "enable extra 
# low-level configuration options" and configure "GPIO pins to set 
# at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini with that SD card.

## Voron Design VORON 0.1 SKR Mini E3 V2 config

## *** THINGS TO CHANGE/CHECK: ***
## MCU path                                                                     [mcu] section
## Z and Extruder motor currents                                                [tmc2209 stepper_*] sections. Uncomment the stepper motor you have
## Full steps per rotation for Extruder                                         [extruder] section
## Thermistor types                                                             [extruder] and [heater_bed] sections - See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types
## Extruder motor currents                                                      [extruder] section
## PID tune                                                                     [extruder] and [heater_bed] sections
## Fine tune E steps                                                            [extruder] section
## For more info                                                                check https://docs.vorondesign.com/build/startup/#v0

[include mainsail.cfg]
[include timelapse.cfg]
[include led_effect.cfg]
[include klicky-probe.cfg]
[include KAMP_Settings.cfg]  

[mcu]
#####################################################################   
# Obtain definition by "ls -l /dev/serial/by-id/"
#####################################################################
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_32FFD6054B43343114591243-if00

[exclude_object]

#  File location of stored varibales
[save_variables]
filename: /home/pi/printer_data/config.variables.stb

[mcu expander]
serial:  /dev/serial/by-id/usb-Klipper_stm32f042x6_0B0005801443303054313620-if00
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points: 60, 60, 20 

[input_shaper]
#shaper_freq_x: 71.8
#shaper_type_x: mzv
#shaper_freq_y: 73.2
#shaper_type_y: mzv

[printer]
kinematics: corexy
max_velocity: 400
max_accel: 8000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 5.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: PB13
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB12                                                       # Check motor direction in link above. If inverted, add a ! before PB12
enable_pin: !PB14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
interpolate: False
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC0  													# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 90                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: PB10
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: PB2                                                        # Check motor direction in link above. If inverted, add a ! before PB2
enable_pin: !PB11
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 40                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
interpolate: False
run_current: 0.7
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^PC1  													# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK
driver_SGTHRS: 95                                                  # this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: PB0
dir_pin: !PC5                                                       # Remove the ! before PC5 if motor direction is inverted.
enable_pin: !PB1
rotation_distance: 8                                                # For T8x8 integrated lead screw
microsteps: 32
endstop_pin: ^PC2
#endstop_pin: probe:z_virtual_endstop
#position_endstop: 120
position_max: 120
position_min: -1.5
homing_speed: 20
second_homing_speed: 3.0
homing_retract_dist: 3.0

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
interpolate: False
## For OMC (StepperOnline) 17LS13-0404E-200G 0.4A 
#run_current: 0.2
## For LDO-42STH25-1004CL200E 1.0A
run_current: 0.37
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: PB3
dir_pin: PB4                                                        # Add ! if moving opposite direction
enable_pin: !PD2
full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 47.088                                            # See calibrating rotation_distance on extruders doc
gear_ratio: 9:1                                                   # For Mini Afterburner
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC8
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: PA0
#control: pid                                                        # Do PID calibration after initial checks
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397
min_temp: 0
max_temp: 300
min_extrude_temp: 0
max_extrude_only_distance: 150
max_extrude_cross_section: 5
pressure_advance: 0.035                                             # See tuning pressure advance doc
pressure_advance_smooth_time: 0.04

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
interpolate: False
## For OMC (StepperOnline) 14HR07-1004VRN 1A 0.9°
#run_current: 0.5   # for OMC 14HR07-1004VRN rated at 1A
## For LDO LDO 36STH17-1004AHG 1A 1.8° 
#run_current: 0.3   # for LDO 36STH17-1004AHG
## For LDO LDO 36STH20-1004AHG 1A 1.8° 
run_current: 0.6   # for LDO 36STH20-1004AHG
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: PC9
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: PC3
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
#control: pid                                                        # Do PID calibration after initial checks
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122

#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: PC7
max_power: 1.0
kick_start_time: 0.3
heater: extruder
heater_temp: 50.0
off_below: 0.13
cycle_time: 0.010
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.8                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[controller_fan mcu_fan]
## Nevermore fan - In Mosfet 1
pin: expander:PA2
kick_start_time: 0.8
heater: heater_bed
fan_speed: 1.0

[fan_generic nevermore_fan]
## Nevermore fan - In Mosfet 1
pin: expander:PA0
max_power: 1.0
kick_start_time: 0.3
off_below: 0.30
shutdown_speed: 0.0


[fan_generic Chlazeni]
## Nevermore fan - In Mosfet 1
pin: expander:PA1
max_power: 1.0
kick_start_time: 0.3
off_below: 0.30
shutdown_speed: 0.0

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
#home_xy_position: 120,120
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right


[probe]
#with Long Klicky Probe
pin: ^PC14
x_offset: 30 #(9.5 with front cowling)
y_offset: 0
#z_offset: 14.5
speed: 10
lift_speed: 7

samples: 3
samples_result: median
sample_retract_dist: 2

samples_tolerance: 0.01
samples_tolerance_retries: 10


[bed_mesh]
mesh_min: 33,33
mesh_max: 87,87
speed: 300
horizontal_move_z: 20 

probe_count: 3,3					#if you would like more detail, use 5,5 here
#relative_reference_index: 4			 #if you use 5,5 above, place 12 here
move_check_distance: 3

algorithm: lagrange
fade_start: 1
fade_end: 10
fade_target: 0
split_delta_z: 0.0125
mesh_pps: 2,2

[screws_tilt_adjust]
screw1: 100,115          #For Long probe
screw1_name: back right
screw2: 0,115            #For Long probe
screw2_name: back left
screw3: 60,5             #For Long probe
screw3_name: front screw
horizontal_move_z: 20
speed: 100
screw_thread: CW-M3

[output_pin led]
pin: expander:PA3
pwm:true
shutdown_value: 0
value:0
cycle_time: 0.01


#####################################################################
#   Temperature sensors
#####################################################################

[temperature_sensor chamber_temp]
sensor_type: Generic 3950
sensor_pin: expander:PA6
gcode_id: T1


[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100


#[filament_switch_sensor Filament_Runout]
##	Connected to Z+ on mcu_xye
#pause_on_runout: TRUE
#runout_gcode: 
#	M600
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#switch_pin: expander:PA5

[servo KlickSwipe]
## See: https://www.klipper3d.org/Config_Reference.html#servo
pin: PC15
initial_angle: 5
maximum_servo_angle: 90

[neopixel my_led] 
pin: PA8 
chain_count: 1
initial_RED: 0.204
initial_GREEN: 0.4
initial_BLUE: 0.365


[neopixel Osvetleni]
pin: expander:PB1
chain_count: 20
initial_RED: 0.42
initial_GREEN: 0.42
initial_BLUE: 0.42




[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[firmware_retraction]
retract_length: 0.8
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 30
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0.02
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

#####################################################################
#   Macros
#####################################################################

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:

    stop_led_effects
    set_led_effect effect=rainbow
    SET_PIN PIN=led VALUE=0.5
    SET_LED LED="my_led" RED=0.4 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
    #SET_LED LED="lcd" RED=0.4 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
    {% set BED_TEMP = params.BED|default(95)|float %}
      {% set EXTRUDER_TEMP = params.EXTRUDER|default(240)|float %}
      {% set MATERIAL = params.MATERIAL|default("XXX")|string %}
      {% if MATERIAL == "ABS" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
      {% elif MATERIAL == "PLA" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
      {% elif MATERIAL == "PETG" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=0
      {% elif MATERIAL == "ASA" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
      {% elif MATERIAL == "XXX" %}
        SET_FAN_SPEED FAN=nevermore_fan SPEED=1
      {% endif %}
      # Předchozí dva řádky nám vytvořily proměnné BED_TEMP a EXTRUDER_TEMP, a doplnily je hodnotami ze Sliceru
    # V případě že slicer hodnoty nepředá, nastaví se defaultně 190 pro hotend, a 60 pro bed
    # Nastavení teplot
    # M104 nám nastaví teplotu na 150 stupňů. Je to teplota, kdy se dá očistit tryska a filament "neslintá"
    M104 S150
    # M140 S{BED_TEMP}
    # M190 nám nastaví teplotu bedu na hodnotu, kterou do makra předal slicer. A čekáme než se nahřeje bed
    M190 S{BED_TEMP}
    # M109 nastaví teplotu hotendu na hodnotu, kterou nám do makra předal slicer a čeká na její dosažení
    #M109 S150 ; Set non dripping hotend temperature
    # UG90 nám přepne na absolutní koordináty
    G90
    # M83 přepne extruder na relativní vzdálenosti
    M83
    # POZOR - G32 je makro pro voron 2.4 a předpokládá se, že jej máte. Pro pořádek jsem jej přidal za PRINT_END
    # Toto makro nám zařídí homování a vyrovnání gantry u V2.4, pokud máte jinou tiskárnu, následující řádek smažte
    G32

    # BED_MESH_CLEAR nám vymaže předchozí uložené hodnoty meshe, chceme začínat s čistým štítem
    BED_MESH_CLEAR
    # A následující příkaz nám zkalibruje podložku pomocí sensoru (bltouch, indukční sensor, crtouch, klicky a jiné)
    BED_MESH_CALIBRATE
    #
    # G1 je gcode pro pohyb. Nyní přesuneme trysku do levého spodního rohu 5mm nad podložku
    # Nyní sjedeme tryskou 0,3mm nad podložku

    # Nyní čekáme na nahřátí trysky na hodnotu předanou slicerem


    G90
    G0 X3 Y5 Z5 F5000
    # Nyní sjedeme tryskou 0,3mm nad podložku
    G0 Z0.3 F3000


    M109 S{EXTRUDER_TEMP}
    # Resetování vzdálenosti extruderu
    G92 E0

    # Očištění trysky. Následující gcode nám pomalu posunuje trysku 14cm doprava a extruder vytlačí 30mm filamentu
    # První pohyb je pomalejší a delší (až do 12cm), a následuje rychlé očištění 2 cm na výsledných 14 cm
    G1 X100 E30 F600
    G1 X110 F5000
    G92 E0
    # Následně před samotným tiskem proběhne krátká retrakce a resetování vzdálenosti extruderu
    G1 E-0.2 F600
    G92 E0
     stop_led_effects
    #set_led_effect effect=progress_bar
    ZAPNOUT
      {% if MATERIAL == "ABS" %}
        SET_FAN_SPEED FAN=Chlazeni SPEED=0
      {% elif MATERIAL == "PLA" %}
        SET_FAN_SPEED FAN=Chlazeni SPEED=1
      {% elif MATERIAL == "PETG" %}
        SET_FAN_SPEED FAN=Chlazeni SPEED=1
      {% elif MATERIAL == "ASA" %}
        SET_FAN_SPEED FAN=Chlazeni SPEED=0
      {% elif MATERIAL == "XXX" %}
        SET_FAN_SPEED FAN=Chlazeni SPEED=1
      {% endif %}

[gcode_macro G32]
gcode:
    # Uložíme aktuální stav tiskárny (pozici trysky, stav extruderu a další hodnoty)
    SAVE_GCODE_STATE NAME=STATE_G32
    # Přepneme na absolutní pozicování/vzdálenosti
    G90
    # zde je podmínka - pokud není tiskárna "vyhoumovaná" provede se příkaz home - G28
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}
    stop_led_effects
    set_led_effect effect=logo_bed_temp
    # Následuje opět home, ale nyní jen pro osu Z
    G28 Z
    # Obnovíme hodnoty původního stavu tiskárny
    RESTORE_GCODE_STATE NAME=STATE_G32


[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-4.0 F3600                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y-10} F3600          ; park nozzle at rear
    SET_PIN PIN=led VALUE=0
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0
    SET_FAN_SPEED FAN=Chlazeni SPEED=0
    #SET_LED LED="lcd" RED=0.4 GREEN=0.4 BLUE=0.4 SYNC=0 TRANSMIT=1
    SET_LED LED="my_led" RED=0.0 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1

[gcode_macro LOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E30 F300                    ; load
   G1 E15 F150                    ; prime nozzle with filament
   M82                            ; set extruder to absolute
    
[gcode_macro Vypnout]
gcode:
    SET_LED LED=Osvetleni GREEN=0 RED=0 BLUE=0

[gcode_macro Zapnout]
gcode:
    SET_LED LED=Osvetleni GREEN=0.4 RED=0.4 BLUE=0.4

[gcode_macro Tryska_vypnout]
gcode:
    SET_PIN PIN=led VALUE=0

[gcode_macro Tryska_zapnout]
gcode:
    SET_PIN PIN=led VALUE=0.5

[gcode_macro UNLOAD_FILAMENT]
gcode:
   M83                            ; set extruder to relative
   G1 E10 F300                    ; extrude a little to soften tip
   G1 E-40 F1800                  ; retract some, but not too much or it will jam
   M82                            ; set extruder to absolute

[gcode_macro LEVEL_BED]
gcode:
    G28
    BED_SCREWS_ADJUST

[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    G91
    G1 X-60 F1200
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
    {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    {% set HOME_CURRENT = 0.7 %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    G91
    G1 Y-10 F1200

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P1000
    # Set current during print
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[homing_override]
axes: xyz
gcode:
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G28 Z
    #G1 Z-10
  {% endif %}

[gcode_shell_command backup_cfg]
command: /usr/bin/bash /home/pi/printer_data/config/autocommit.sh
timeout: 30
verbose: True

[gcode_macro BACKUP_CFG]
description: Backs up config directory GitHub
gcode:
     RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause


[gcode_arcs]
#If you allready have this somewhere you will need to remove it here or there


[gcode_macro G0]
rename_existing: G0.1
gcode:
  G1 {rawparams}

[gcode_macro G1]
rename_existing: G1.1
variable_z_hop_offset = 0
gcode:
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  {% if printer.gcode_move.absolute_coordinates and OFFSET > 0 and ('Z' in params) %}
    ; Rewrite paramters for adjust Z if offset is activ and we are absulute
    {% set new_params = ''|string %}
    {% if ('E' in params) %}
      {% set new_params = new_params ~ " E" ~ params.E %}
    {% endif %}
  
    {% if ('F' in params) %}
      {% set new_params = new_params ~ " F" ~ params.F %}
    {% endif %}
  
    {% if ('X' in params) %}
      {% set new_params = new_params ~ " X" ~ params.X %}
    {% endif %}
  
    {% if ('Y' in params) %}
      {% set new_params = new_params ~ " Y" ~ params.Y %}
    {% endif %}
  
    
    {% set new_params = new_params ~ (' Z%g' % (params.Z|float + OFFSET))|string %}
    
    ; Make the movement
    G1.1{new_params}
  {% else %}
    ; Don't care if relativ or no offset activ
    G1.1 {rawparams}
  {% endif %}


[gcode_macro G2]
rename_existing: G2.1
gcode:
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  {% if printer.gcode_move.absolute_coordinates and OFFSET > 0 and ('Z' in params) %}
    ; Rewrite paramters for adjust Z if offset is activ and we are absulute

    {% set new_params = [] %}
    {% for key in params %}
      {% if key == "Z" %}
        {% set x = new_params.append('Z%g' % (params[key]|float + OFFSET)) %}
      {% else %}
        {% set x = new_params.append(key + params[key]) %}
      {% endif %}
    {% endfor %}

    {% set new_params=new_params|join(" ") %}

    ; Make the movement
    G2.1 {new_params}
  {% else %}
    ; Don't care if relativ or no offset activ
    G2.1 {rawparams}
  {% endif %}

[gcode_macro G3]
rename_existing: G3.1
gcode:
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  {% if printer.gcode_move.absolute_coordinates and OFFSET > 0 and ('Z' in params) %}
    ; Rewrite paramters for adjust Z if offset is activ and we are absulute

    {% set new_params = [] %}
    {% for key in params %}
      {% if key == "Z" %}
        {% set x = new_params.append('Z%g' % (params[key]|float + OFFSET)) %}
      {% else %}
        {% set x = new_params.append(key + params[key]) %}
      {% endif %}
    {% endfor %}

    {% set new_params=new_params|join(" ") %}

    ; Make the movement
    G3.1 {new_params}
  {% else %}
    ; Don't care if relativ or no offset activ
    G3.1 {rawparams}
  {% endif %}

# Hacked G11 (unretract) for have a short delay after unretract, remove it or set wait to 0, if this is not needed.
[gcode_macro G11]
rename_existing: G11.1
gcode:
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  ; Z-UNHOP
  {% if OFFSET > 0 %}
    {% set VELOCITY = printer.save_variables.variables.current_zhop_velocity|default(300)|float %}
    SET_GCODE_VARIABLE MACRO=G1 VARIABLE=z_hop_offset VALUE=0
    {% set speed = printer.gcode_move.speed %}
    ; Make a different movement coresponting to current coordinate mode
    {% if printer.gcode_move.absolute_coordinates %}
      #G1.1 F{VELOCITY} Z{(printer.gcode_move.position.z - OFFSET)}
      G91
      G1.1 Z-{OFFSET} F{VELOCITY}
      G90
    {% else %}
      G1.1 Z-{OFFSET} F{VELOCITY}
    {% endif %}
    G1.1 F{speed}
  {% endif %}

  G11.1
  ; Have an addional parameter for wait after unretract
  {% set wait = printer.save_variables.variables.current_unretract_wait|default(0)|float %}
  {% if wait > 0 %}
    G4 P{'%d' %wait}
  {% endif %}

# Hacked G10 (retract) with ZHOP
[gcode_macro G10]
rename_existing: G10.1
gcode:
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  ; Make the retract
  G10.1

  ; Make the ZHOP
  {% set HEIGHT = printer.save_variables.variables.current_zhop_height|default(0)|float %}

  {% if HEIGHT > 0 %}
    {% if OFFSET > 0 %}
      SHOW_MSG MSG="ZHOP allready activ"
    {% else %}
      {% set VELOCITY = printer.save_variables.variables.current_zhop_velocity|default(300)|float %}
      {% set speed = printer.gcode_move.speed %}
      SET_GCODE_VARIABLE MACRO=G1 VARIABLE=z_hop_offset VALUE={HEIGHT}
      ; Make a different movement coresponting to current coordinate mode
      {% if printer.gcode_move.absolute_coordinates %}
        #SHOW_MSG MSG="G10 abs up: {(printer.gcode_move.position.z + HEIGHT)}"
        #G1.1 Z{(printer.gcode_move.position.z + HEIGHT)} F{VELOCITY}
        G91
        G1.1 Z{HEIGHT} F{VELOCITY}
        G90
      {% else %}
        G1.1 Z{HEIGHT} F{VELOCITY}
      {% endif %}
      G1.1 F{speed}
    {% endif %}
  {% endif %}


# Set the wished ZHOP height/distance. Set to 0 will disable it!
[gcode_macro SET_ZHOP]
gcode:
  {% set HEIGHT = params.HEIGHT|default(0)|float %}
  {% set VELOCITY = params.VELOCITY|default(300)|float %}
  {% if VELOCITY > 0 %}
    SAVE_VARIABLE VARIABLE='current_zhop_velocity' VALUE={VELOCITY}
  {% endif %}
  {% if HEIGHT >= 0 %}
    SAVE_VARIABLE VARIABLE='current_zhop_height' VALUE={HEIGHT}
    SHOW_MSG MSG="ZHOP: Z{HEIGHT}/F{VELOCITY}"
  {% endif %}

# This should allways be part of the start gcode. Worestcase you will print with an positive offset.
[gcode_macro CLEAR_ZHOP]
gcode:
  SET_GCODE_VARIABLE MACRO=G1 VARIABLE=z_hop_offset VALUE=0

# Print ZHOP settings
[gcode_macro GET_ZHOP]
gcode:
  {% set HEIGHT = printer.save_variables.variables.current_zhop_height|default(0)|float %}
  {% set VELOCITY = printer.save_variables.variables.current_zhop_velocity|default(300)|float %}
  {% set OFFSET = printer["gcode_macro G1"].z_hop_offset %}
  SHOW_MSG MSG="ZHOP height:    {HEIGHT}"
  SHOW_MSG MSG="ZHOP velocity:  {VELOCITY}"
  SHOW_MSG MSG="ZHOP retracted: {'yes' if (OFFSET > 0) else 'no'}"

[gcode_macro SHOW_MSG]
gcode:
  {% set MSG = params.MSG|default("No msg")|string %}
  M117 {MSG}
  RESPOND MSG={'"%s"' % MSG}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 25.448
#*# pid_ki = 1.731
#*# pid_kd = 93.521
#*#
#*# [stepper_z]
#*# position_endstop = 118.273
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 86.8
#*# shaper_type_y = mzv
#*# shaper_freq_y = 52.2
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.193
#*# pid_ki = 3.053
#*# pid_kd = 327.022
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.210500, 0.258000, 0.293000
#*# 	  0.199250, 0.266750, 0.286750
#*# 	  0.193000, 0.224250, 0.269250
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 33.0
#*# max_x = 87.0
#*# min_y = 33.0
#*# max_y = 87.0
#*#
#*# [probe]
#*# z_offset = 9.750
